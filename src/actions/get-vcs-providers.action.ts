import { appsApiClient } from "../api";

export const getVcsProvidersAction = async ()=> {
  try {
    console.log("üîç –ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...");

    const response = await appsApiClient.getVcsProviders();

    console.log('–æ—Ç–≤–µ—Ç –æ—Ç –∞–ø–∏', response);

    console.log(
      `‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response?.providers?.length || 0} VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤`
    );

    return response;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:", error);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (error instanceof Error) {
      if (
        error.message.includes("401") ||
        error.message.includes("Unauthorized")
      ) {
        throw new Error("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ TIMEWEB_TOKEN");
      }
      if (
        error.message.includes("403") ||
        error.message.includes("Forbidden")
      ) {
        throw new Error("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–∫–µ–Ω–∞");
      }
      if (error.message.includes("404")) {
        throw new Error("‚ùå API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω");
      }
      if (error.message.includes("500")) {
        throw new Error("‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Timeweb Cloud");
      }
      if (error.message.includes("Network Error")) {
        throw new Error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É");
      }
      if (error.message.includes("timeout")) {
        throw new Error("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç API");
      }
    }

    throw error;
  }
};
