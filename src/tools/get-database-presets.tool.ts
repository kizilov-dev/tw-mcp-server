import { createToolResponse } from "../utils";
import { getDatabasePresetsAction } from "../actions/get-database-presets.action";
import { ToolNames } from "../types/tool-names.enum";

const handler = async () => {
  try {
    const presets = await getDatabasePresetsAction();

    if (!presets || !presets.length) {
      return createToolResponse(
        `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö`
      );
    }

    const response = `üìä **–ü—Ä–µ—Å–µ—Ç—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö Timeweb Cloud**\n\n;${JSON.stringify(presets, null, 2)}`;

    return createToolResponse(response);
  } catch (error) {
    if (error instanceof Error) {
      return createToolResponse(
        `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ—Å–µ—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏—á–∏–Ω–∞: ${error.message}`
      );
    }
    return createToolResponse(
      `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ—Å–µ—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö`
    );
  }
};

export const getDatabasePresetsTool = {
  name: ToolNames.GET_DATABASE_PRESETS,
  title: "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
  description:
    "–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö",
  inputSchema: {},
  handler,
};
