import { z } from "zod";
import { ToolNames } from "../types/tool-names.enum";
import { createToolResponse } from "../utils";
import { getAllowedPresetsAction } from "../actions/get-allowed-presets.action";

const outputSchema = {
  backend_presets: z.array(
    z.object({
      id: z.number({
        description: "ID –ø—Ä–µ—Å–µ—Ç–∞ –¥–ª—è backend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      }),
      description: z.string({
        description: "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞",
      }),
      description_short: z.string({
        description: "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞",
      }),
      price: z.number({
        description: "–¶–µ–Ω–∞ –ø—Ä–µ—Å–µ—Ç–∞ –≤ —Ä—É–±–ª—è—Ö/–º–µ—Å—è—Ü",
      }),
      cpu: z.number({
        description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ CPU —è–¥–µ—Ä",
      }),
      ram: z.number({
        description: "–û–±—ä–µ–º RAM –≤ –ú–ë",
      }),
      disk: z.number({
        description: "–†–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞ –≤ –ú–ë",
      }),
      location: z.string({
        description: "–õ–æ–∫–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞",
      }),
      cpu_frequency: z.string({
        description: "–ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞",
      }),
    }),
    {
      description: "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è backend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    }
  ),
  frontend_presets: z.array(
    z.object({
      id: z.number({
        description: "ID –ø—Ä–µ—Å–µ—Ç–∞ –¥–ª—è frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      }),
      description: z.string({
        description: "–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞",
      }),
      description_short: z.string({
        description: "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞",
      }),
      price: z.number({
        description: "–¶–µ–Ω–∞ –ø—Ä–µ—Å–µ—Ç–∞ –≤ —Ä—É–±–ª—è—Ö/–º–µ—Å—è—Ü",
      }),
      location: z.string({
        description: "–õ–æ–∫–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞",
      }),
      requests: z.number({
        description: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–µ—Å—è—Ü",
      }),
      disk: z.number({
        description: "–†–∞–∑–º–µ—Ä –¥–∏—Å–∫–∞ –≤ –ú–ë",
      }),
    }),
    {
      description: "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    }
  ),
};

const handler = async () => {
  try {
    const presets = await getAllowedPresetsAction();

    const responseMessage = `üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:

üîπ Backend –ø—Ä–µ—Å–µ—Ç—ã:
${
  presets.backend_presets
    ?.map(
      (preset) =>
        `ID: ${preset.id} | ${preset.description_short}
     üí∞ –¶–µ–Ω–∞: ${preset.price}‚ÇΩ/–º–µ—Å
     üñ•Ô∏è CPU: ${preset.cpu}
     üíæ RAM: ${preset.ram / 1024}Gb
     üíø –î–∏—Å–∫: ${preset.disk / 1024}Gb
     ‚ö° –ß–∞—Å—Ç–æ—Ç–∞: ${preset.cpu_frequency}GHz`
    )
    .join("\n\n") || "  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö backend –ø—Ä–µ—Å–µ—Ç–æ–≤"
}

üîπ Frontend –ø—Ä–µ—Å–µ—Ç—ã:
${
  presets.frontend_presets
    ?.map(
      (preset) =>
        `ID: ${preset.id} | ${preset.description_short}
     üí∞ –¶–µ–Ω–∞: ${preset.price}‚ÇΩ/–º–µ—Å
     üíø –î–∏—Å–∫: ${preset.disk}Mb`
    )
    .join("\n\n") || "  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö frontend –ø—Ä–µ—Å–µ—Ç–æ–≤"
}

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ID –ø—Ä–µ—Å–µ—Ç–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –ø–æ–ª–µ preset_id`;

    return createToolResponse(responseMessage);
  } catch (error) {
    if (error instanceof Error) {
      return createToolResponse(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ—Å–µ—Ç–æ–≤. –ü—Ä–∏—á–∏–Ω–∞: ${error.message}`
      );
    }

    return createToolResponse(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ—Å–µ—Ç–æ–≤.`);
  }
};

export const getAllowedPresetsTool = {
  name: ToolNames.GET_ALLOWED_PRESETS,
  title: "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
  description: "–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
  inputSchema: {},
  outputSchema,
  handler,
};
