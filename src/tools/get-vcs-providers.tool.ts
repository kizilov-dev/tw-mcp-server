import { createToolResponse } from "../utils";
import { getVcsProvidersAction } from "../actions/get-vcs-providers.action";
import { ToolNames } from "../types/tool-names.enum";

const handler = async () => {
  try {
    console.log("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...");

    const providers = await getVcsProvidersAction();

    if (!providers || providers.length === 0) {
      return createToolResponse(
        `üí° VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å –ø–æ–º–æ—â—å—é tool ${ToolNames.ADD_VCS_PROVIDER}`
      );
    }

    const providersList = providers
      .map(
        (provider) =>
          `üîπ ${provider.provider} –ø—Ä–æ–≤–∞–π–¥–µ—Ä
        ID: ${provider.provider_id}
        Login: ${provider.login}`
      )
      .join("\n\n");

    return createToolResponse(`üìã –°–ø–∏—Å–æ–∫ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:

    ${providersList}

    üí° –í—Å–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤: ${providers.length}

    üéâ –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω!`);
  } catch (error) {
    if (error instanceof Error) {
      return createToolResponse(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤. –ü—Ä–∏—á–∏–Ω–∞: ${error.message}`
      );
    }

    return createToolResponse(
      `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤.`
    );
  }
};

export const getVcsProvidersTool = {
  name: ToolNames.GET_VCS_PROVIDERS,
  title: "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤",
  description: "–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö VCS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤",
  inputSchema: {},
  handler,
};
